<!DOCTYPE html>
    <head>
        <title>Dungeon Crawl Stone Soup</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.2/css/bootstrap.min.css">
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.2/css/bootstrap-theme.min.css">

        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.2/js/bootstrap.min.js"></script>

        <script>
            // Convert RSS feed into news list
            // http://www.davidjuth.com/rest-demo-jquery-rss.aspx
            $( function()
            {
                $("#feedContainer").empty();

                $.get("/wordpress/feed", function(data) {
                    
                    $('#newsContainer').append("<ul>");
                    $(data).find('item').slice(0, 4).each(function() {  
                        var $item = $(this);  
                        var title = $item.find('title').text();  
                        var link = $item.find('link').text();  
            
                        var html = "<a href=\"" + link + "\"><li>" + title + "</a></li>";  
            
                        $('#newsContainer').append(html);  
                    });
                    $('#newsContainer').append("</ul>");
                });
            });
        </script>

        <script>
            // Replacement for underscore's _.sample helper
            // usage: getRandomSubarray(x, 5);
            // http://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array
            function getRandomSubarray(arr, size) {
                var shuffled = arr.slice(0), i = arr.length, temp, index;
                while (i--) {
                    index = Math.floor((i + 1) * Math.random());
                    temp = shuffled[index];
                    shuffled[index] = shuffled[i];
                    shuffled[i] = temp;
                }
                return shuffled.slice(0, size);
            }
            // Replacement for underscore's _.shuffle helper
            // usage: shuffleArray(x);
            // http://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array-in-javascript
            function shuffleArray(o){ //v1.0
                for(var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
                return o;
            };
            function setPlayerCaptions(data) {
                    n = 6; // is there a nicer way to hardcode this?
                    numimgs = 11; // the number of images in splashimgs/ -- remember the images are 0-indexed!
                    // Generate the image candidates
                    image_candidates = [];
                    for (var i=0; i < numimgs; i++) {
                        image_candidates.push('splashimgs/dcss-splash-' + i + '.png');
                    }
                    // Generate the spectator candidates
                    // Preconditions:
                    // We only want candidates with full info (some entries lack xl/race/background/location, so test for xl)
                    // Check they have a species -- player might be on start screen
                    // And we need a watch url
                    candidates = data.filter(function(element) { return "XL" in element && element["species"] != '' && "watchurl" in element});
                    // There are a two competing goals with the candidate selection:
                    // * random each refresh
                    // * picks the best candidates
                    // To balance this, partition the candidate list into good, ok & bad groups, and select from each in turn as required
                    // Good: has spectators
                    // OK: idle < 5 secs
                    // Bad: everything else
                    good_candidates = []
                    ok_candidates = []
                    bad_candidates = []
                    for (var i = 0; i < candidates.length; i++) {
                        c = candidates[i];
                        if (c['viewers'] > 0) {
                            good_candidates.push(c);
                        } else if (c['idle'] < 5) {
                            ok_candidates.push(c);
                        } else {
                            bad_candidates.push(c);
                        }
                    }
                    selected_candidates = getRandomSubarray(good_candidates, n);
                    if (selected_candidates.length < n) {
                        n = n - selected_candidates.length;
                        selected_candidates = selected_candidates.concat(getRandomSubarray(ok_candidates, n));
                        if (selected_candidates.length < n) {
                            n = n - selected_candidates.length;
                            selected_candidates = selected_candidates.concat(getRandomSubarray(bad_candidates, n));
                         }
                    }
                    // Note that we might not have enough candidates at this point
                    if (selected_candidates.length <  $( "#tiles div" ).length) {
                        console.log("Warning: only found " + selected_candidates.length + " candidates.");
                    }
                    selected_candidates = shuffleArray(selected_candidates);
                    selected_image_candidates = shuffleArray(getRandomSubarray(image_candidates, selected_candidates.length));

                    // Create & write our tiles
                    $( "#tiles" ).empty();
                    for (var i = 0; i < selected_candidates.length; i++) {
                        c = selected_candidates[i];
                        e = $( "<div>" );
                        e.addClass("col-md-4 col-sm-6 text-center");
                        if (i >= 2) {
                            e.addClass("hidden-xs");
                        }
                        if (i >= 4) {
                            e.addClass("hidden-sm");
                        }

                        e.css("border-radius", "5px");
                        // image
                        e.append(
                            $("<div/>").css('text-align', 'center').css('overflow', 'hidden').css('height', '150px').append(
                                $("<a/>").attr('href', c["watchurl"]).append(
                                    $("<img/>").attr('src', selected_image_candidates.pop()).css('position', 'relative').css('left', '100%').css('margin-left', '-200%')
                                    )
                            )
                        );
                        // description
                        e.append(
                            $("<p/>").addClass("lead").css('margin', '0').append(
                                $("<a/>").attr('href', c["watchurl"]).text(c["name"] + " the " + c["latest_milestone"]["title"])
                            )
                        );
                        e.append($("<p/>").append($("<em/>").text(getFlavourLine(c))));

                        $( "#tiles" ).append(e);

                        // Add in clearfix classes if required
                        if (i > 0 && i != selected_candidates.length) {
                            if ((i+1) % 2 == 0) {
                                $( "#tiles" ).append($("<div/>").addClass("clearfix visible-sm"));
                            }
                            if ((i+1) % 3 == 0) {
                                $( "#tiles" ).append($("<div/>").addClass("clearfix visible-md"));
                            }
                        }

                    }

                    $( "#dcss-online-link" ).text("See all " + data.length + " online games...");
            }
            function getFlavourLine(game) {
                // This function is given a dgl-status game and returns an interesting string about it.
                // We do this by generating every line and returning a random one.
                // This is sort of inefficient -- is there a smarter way?
                m = game["latest_milestone"];
                candidates = [];
                if (m['zigdeepest'] > 0) {
                    candidates.push("Reached level " + m['zigdeepest'] + " of a Ziggurat");
                }
                if (m['zigscompleted'] > 0) {
                    candidates.push("Completed " + m['zigscompleted'] + " Ziggurats");
                }
                if ((m['mhp'] * 2) <  m['hp']) {
                    candidates.push("HP: " + m['hp'] + '/' + m['mhp'] + ' MP: ' + m['mp'] + '/' + m['mmp']);
                }
                if (m['status'].split(",").length > 2) {
                    status = m['status'].split(",").join(", ")
                    candidates.push(status.charAt(0).toUpperCase() + status.slice(1));
                }
                if (m['nrune'] > 1) {
                    candidates.push("Collected " + m['nrune'] + " runes");
                }
                if (m['banisher']) {
                    candidates.push("Banished to the Abyss by " + m['banisher']);
                }
                if (candidates.length < 1 || Math.random() < 0.33) {
                    candidates.push("Just " + m['milestone'].slice(0, -1));
                    candidates.push("Level " + game["XL"] + " " + game["species"] + " " + game["background"] + (m["god"] ? " of " + m["god"] : ""));
                    // location field needs the first letter capitalised
                    candidates.push(game["location"].charAt(0).toUpperCase() + game["location"].slice(1));
                    if (m['sk']) {
                        candidates.push("Highest skill: " + m['sk']);
                    }
                }
                return getRandomSubarray(candidates, 1);
            }
            data = $.get("dgl-status.json");
            data.done(setPlayerCaptions);
        </script>
    </head>
    <body>
        <div class="container">
            <div class="page-header">
                <center>
                    <a href="index.htm"><img class="img-responsive" src="logo.png" title="Dungeon Crawl Stone Soup" width="790px" height="152px"></a>
                </center>
            </div>

            <!-- mention free/open-source? -->
            <p class="lead text-center">A roguelike adventure through dungeons filled with dangerous monsters in a quest to find the mystifyingly fabulous Orb of Zot.</p>
            <center> <!-- XXX: HACKY!!!!! -->
                <a href="play.htm" class="btn btn-lg btn-success" style="padding: 20px 32px; font-size: 24px;">Play Online Now!</a>
                <br><br>
                <p class="text-center">Or download for: <a href="download.htm#windows">Windows</a>, <a href="download.htm#osx">OS X</a>, <a href="download.htm#android">Android</a>, <a href="download.htm#linux">Linux</a>.</p>
            </center>

            <h2 class="text-center">Live games</h2>
            <div class="row" id="tiles"><p class="text-center">Loading...</p></div>
            <a href="watch.htm"><p id="dcss-online-link">See all games...</p></a>

            <h2>Latest News</h2>
            <div class="container" id="newsContainer"></div>
            <p><a href="http://crawl.develz.org/wordpress/blog">All news...</a></p>

            <h2>Help & Community</h2>
            <ul>
                <li><a href="http://crawl.chaosforge.org/">Community Wiki</a>: Up-to-date information on game items &amp; concepts</li>
                <li><a href="https://crawl.develz.org/tavern/">Forum</a>: Debate strategy and propose changes on our forums</a></li>
                <li><a href="http://webchat.freenode.net/?channels=%23%23crawl">IRC</a>: ##crawl on Freenode is filled with helpful souls offering real-time advice</li>
                <li><a href="https://crawl.develz.org/mantis/">Bug Reports</a>: Found a problem? Let us know!</li>
            </ul>

            <hr>
            <p class="small text-right">You are too berserk!</p>

        </div>
    </body>
</html>
